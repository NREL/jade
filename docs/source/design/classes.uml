
@startuml

class ConfigurationInputs {
    {abstract} string base_directory()
    {abstract} namedtuple create_key()
    {abstract} dict get_available_parameters()
}

AutoRegressionInputs <|-- ConfigurationInputsInterface

class JobParametersInterface {
    {abstract} serialize()
    {abstract} deserialize(data)
}

AutoRegressionParameters <|-- JobParametersInterface

class JobExecutionInterface {
    {abstract} int run()
    {abstract} list list_results_files()
}

AutoRegressionExecution <|-- JobExecutionInterface

class JobConfiguration {
    {static} JobConfiguration auto_config()
    {static} JobConfiguration deserialize(string filename)
    {abstract} void clear()
    {abstract} void dump(string filename)
    {abstract} void dumps()
    {abstract} int get_num_jobs()
    {abstract} iter iter_jobs()
    {abstract} void reconfigure_jobs(list parameters)
}

JobConfiguration o-- ConfigurationInputsInterface
JobConfiguration o-- JobExecutionInterface

class JobManagerBase {
    int get_num_jobs()
    list get_completed_results()
}

class JobSubmitter {
    void cancel_jobs(list names)
    int submit_jobs()
    list get_failed_parameters(string output_directory)
    void create_config_from_failed_jobs(string output_directory, string filename)
}

class JobRunner {
    int run_jobs()
}

JobSubmitter <|-- JobManagerBase
JobRunner <|-- JobManagerBase

JobManagerBase o-- JobConfiguration

class HpcManagerInterface {
    {abstract} void cancel_job(string job_id)
    {abstract} HpcJobInfo check_status(string job_id)
    {abstract} void create_submission_script(string name, string script)
    {abstract} int submit(string filename)
}

SlurmManager <|-- HpcManagerInterface
PbsManager <|-- HpcManagerInterface
LocalManager <|-- HpcManagerInterface

class HpcManager {
    void cancel_job(string job_id)
    HpcJobInfo check_status(string job_id)
    dict get_hpc_config()
    HpcType hpc_type()
    int run_jobs(**kwargs)
    int submit(string name, string filename)
}

HpcManager *-- HpcManagerInterface

JobSubmitter o-- HpcManager

@enduml
